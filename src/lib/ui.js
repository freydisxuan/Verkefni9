import { getLaunch, searchLaunches } from './api.js';
import { el } from './elements.js';

/**
 * B√Ωr til leitarform.
 * @param {(e: SubmitEvent) => void} searchHandler Fall sem keyrt er √æegar leita√∞ er.
 * @param {string | undefined} query Leitarstrengur.
 * @returns {HTMLElement} Leitarform.
 */
export function renderSearchForm(searchHandler, query = undefined) {
  const form = el(
    'form',
    {},
    el('input', { value: query ?? '', name: 'query' }),
    el('button', {}, 'Leita')
  );

  form.addEventListener('submit', searchHandler);

  return form;
}

/**
 * Setur ‚Äûloading state‚Äú skilaba√∞ me√∞an g√∂gn eru s√≥tt.
 * @param {HTMLElement} parentElement Element sem √° a√∞ birta skilbao√∞ √≠.
 * @param {Element | undefined} searchForm Leitarform sem √° a√∞ gera √≥virkt.
 */
function setLoading(parentElement, searchForm = undefined) {
  let loadingElement;
  try {
    loadingElement = parentElement.querySelector('.loading');
  } catch (e) {
    console.warn('fann ekki loading element');
  }

  if (!loadingElement) {
    loadingElement = el('div', { class: 'loading' }, 'S√¶ki g√∂gn...');
    parentElement.appendChild(loadingElement);
  }

  if (!searchForm) {
    return;
  }

  const button = searchForm.querySelector('button');

  if (button) {
    button.setAttribute('disabled', 'disabled');
  }
}

/**
 * Fjarl√¶gir ‚Äûloading state‚Äú.
 * @param {HTMLElement} parentElement Element sem inniheldur skilabo√∞.
 * @param {Element | undefined} searchForm Leitarform sem √° a√∞ gera virkt.
 */
function setNotLoading(parentElement, searchForm = undefined) {
  const loadingElement = parentElement.querySelector('.loading');

  if (loadingElement) {
    loadingElement.remove();
  }

  if (!searchForm) {
    return;
  }

  const disabledButton = searchForm.querySelector('button[disabled]');

  if (disabledButton) {
    disabledButton.removeAttribute('disabled');
  }
}

/**
 * Birta ni√∞urst√∂√∞ur √∫r leit.
 * @param {import('./api.types.js').Launch[] | null} results Ni√∞urst√∂√∞ur √∫r leit
 * @param {string} query Leitarstrengur.
 */
function createSearchResults(results, query) {
  const list = el('ul', { class: 'results' });

  if (!results) {
    const noResultsElement = el('li', {}, `Villa vi√∞ leit a√∞ ${query}`);
    list.appendChild(noResultsElement);
    return list;
  }

  if (results.length === 0) {
    const noResultsElement = el(
      'li',
      {},
      `Engar ni√∞urst√∂√∞ur fyrir leit a√∞ ${query}`
    );
    list.appendChild(noResultsElement);
    return list;
  }

  for (const result of results) {
    const resultElement = el(
      'li',
      { class: 'result' },
      el('span', { class: 'name' }, result.name),
      el('span', { class: 'mission' }, result.mission)
    );

    list.appendChild(resultElement);
  }

  return list;
}

/**
 *
 * @param {HTMLElement} parentElement Element sem √° a√∞ birta ni√∞urst√∂√∞ur √≠.
 * @param {Element} searchForm Form sem √° a√∞ gera √≥virkt.
 * @param {string} query Leitarstrengur.
 */
export async function searchAndRender(parentElement, searchForm, query) {
  const mainElement = parentElement.querySelector('main');

  if (!mainElement) {
    console.warn('fann ekki <main> element');
    return;
  }

  // Fjarl√¶gja fyrri ni√∞urst√∂√∞ur
  const resultsElement = mainElement.querySelector('.results');
  if (resultsElement) {
    resultsElement.remove();
  }

  setLoading(mainElement, searchForm);
  const results = await searchLaunches(query);
  setNotLoading(mainElement, searchForm);

  const resultsEl = createSearchResults(results, query);

  mainElement.appendChild(resultsEl);
}

/**
 * S√Ωna fors√≠√∞u, hugsanlega me√∞ leitarni√∞urst√∂√∞um.
 * @param {HTMLElement} parentElement Element sem √° a√∞ innihalda fors√≠√∞u.
 * @param {(e: SubmitEvent) => void} searchHandler Fall sem keyrt er √æegar leita√∞ er.
 * @param {string | undefined} query Leitaror√∞, ef eitthva√∞, til a√∞ s√Ωna ni√∞urst√∂√∞ur fyrir.
 */
export function renderFrontpage(
  parentElement,
  searchHandler,
  query = undefined
) {
  const heading = el(
    'h1',
    { class: 'heading', 'data-foo': 'bar' },
    'Geimskotaleitin üöÄ'
  );
  const searchForm = renderSearchForm(searchHandler, query);

  const container = el('main', {}, heading, searchForm);
  parentElement.appendChild(container);

  if (!query) {
    return;
  }

  searchAndRender(parentElement, searchForm, query);
}

/**
 * S√Ωna geimskot.
 * @param {HTMLElement} parentElement Element sem √° a√∞ innihalda geimskot.
 * @param {string} id Au√∞kenni geimskots.
 */
export async function renderDetails(parentElement, id) {
  const backElement = el(
    'div',
    { class: 'back' },
    el('a', { href: '/' }, 'Til baka')
  );
  const container = el('main', {}, backElement);

  parentElement.appendChild(container);
  const mainElement = parentElement.querySelector('main');

  setLoading(mainElement);
  const result = await getLaunch(id);
  setNotLoading(mainElement);

  /* TODO setja loading state og s√¶kja g√∂gn */

  // T√≥mt og villu state, vi√∞ gerum ekki greinarmun √° √æessu tvennu, ef vi√∞
  // myndum vilja gera √æa√∞ √æyrftum vi√∞ a√∞ skilgreina st√∂√∞u fyrir ni√∞urst√∂√∞u
  if (!result) {
    console.warn('fann ekki leitarni√∞urst√∂√∞u');
    return;
  }

  const { name, windowEnd, windowStart, status, mission } = result;

  const detailsElement = el(
    'div',
    { class: 'details' },
    el('h2', { class: 'name' }, name),
    el(
      'dl',
      {},
      el('dt', {}, 'Byrjun glugga:'),
      el('dd', {}, windowStart.replace(/T|Z/g, ' ')),
      el('dt', {}, 'Lok glugga:'),
      el('dd', {}, windowEnd.replace(/T|Z/g, ' ')),
      el('dt', {}, 'Sta√∞a:'),
      el('dd', {}, status.name),
      el('dt', {}, 'L√Ωsing:'),
      el('dd', {}, status.description),
      el('dt', {}, 'Heiti fer√∞ar:'),
      el('dd', {}, mission.name),
      el('dt', {}, 'L√Ωsing:'),
      el('dd', {}, mission.description)
    )
  );

  mainElement.appendChild(detailsElement);
}
